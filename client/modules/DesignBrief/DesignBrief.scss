@import "~styles/variables.scss";

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

$content-width: 70%;
.DesignBrief {
	height: 100%;
	width: 100%;

	.contentContainer {

		// margin: $subsection-padding auto 110px auto;
		padding: $subsection-padding 0 110px 0;
		@media (max-width: $mobile-max-width) {
			padding-bottom: 60px;
		}
		// position: relative;

		&.post {
			.menu {
				.sidebar {
					position: fixed;
					top: $subsection-padding;
					left: 70%;
				}
			}
		}

		.menu {
			z-index: 1;
			width: $content-width;
			.sidebar {
				text-align: left;
				margin: 0;
				padding: 0;
				/* width: (strip-unit($content-width) / 100) * 20%;*/

				width: 250px;
				position: absolute;
				left: 70%;
				left: calc(70vw - ((100vw - 960px) / 2)); // 960px = width of the globalStyles.contentWrapper class, need to make into a variable

				list-style: none;

				background-color: #fff;
				box-shadow: $theme-boxshadow; 

				p {
					
				}
				a {
					$border-width-base: 1px;
					$border-width-current: 5px;
					$padding-base: 1em;
					text-decoration: none;
					color: inherit;
					font-weight: lighter;
					li {
						padding: .2em;
						padding-left: calc(#{$padding-base} + #{$border-width-current} - #{$border-width-base});

						font-size: 0.75em;
						border-bottom: $border-width-base solid rgb(215, 215, 215);
						&:not(:first-child) {
							border-top: none;
						}

						&.current {
							font-weight: bolder;
							padding-left: $padding-base;
							border-left: $border-width-current solid #4496ff;
						}
					}
				}
			}
		}

		.briefNavBar {

			ul {
				list-style-type: none;
				margin: 0;
				margin: 15px 0;
			}

			li {
				display: inline;
				padding: 10px 30px;
				font-weight: normal;
			}
			.react-tabs {
			  &__tab-list {
			    border-bottom: 1px solid #aaa;
			    margin: 0 0 10px;
			    padding: 0;
			  }

			  &__tab {
			    display: inline-block;
			    border: 1px solid transparent;
			    border-bottom: none;
			    bottom: -1px;
			    position: relative;
			    list-style: none;
			    padding: 6px 12px;
			    cursor: pointer;

			    &--selected {
			      background: #fff;
			      border-color: #aaa;
			      color: black;
			      border-radius: 5px 5px 0 0;
			    }
			    &:focus {
			      box-shadow: 0 0 5px hsl(208, 99%, 50%);
			      border-color: hsl(208, 99%, 50%);
			      outline: none;

			      &:after {
			        content: "";
			        position: absolute;
			        height: 5px;
			        left: -4px;
			        right: -4px;
			        bottom: -5px;
			        background: #fff;
			      }
			    }
			  }

			  &__tab-panel {
			    display: none;

			    &--selected {
			      display: block;
			    }

			    &--disabled {
			      color: GrayText;
			      cursor: default;
			    }
			  }
			}
		}
	}

	.resources {
		width: $content-width;

		.resourceHeader {
			display: flex;
			align-items: flex-end;
			
			h2 {
				padding: 0;
			}
			a {
				text-decoration: none;
				span {
					padding-left: 10px;
					color: $theme-color-blue;
					font-size: 0.9em;
					font-weight: 800;
				}

				&:hover {
					opacity: 0.7;
					transition: opacity 0.5s ease 0s;
				}
			}
		}
	}
	hr{ 
    border-top: 1px solid #d4d4d4;
	}

}

@media (max-width: $mobile-max-width) {
	.DesignBrief {
		overflow-x: hidden;
		.sidebar {
			display: none;
		}

		.resources {
			width: 100%;
		}
	}
}
